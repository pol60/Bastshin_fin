1. Login.tsx
   - Компонент страницы входа в систему. 
   Включает форму для ввода email и пароля, обработчики для аутентификации пользователя 
   и миграции гостевой сессии в пользовательскую сессию.

2. Auth.tsx
   - Компонент страницы аутентификации. 
   Позволяет пользователям войти в систему или зарегистрироваться. 
   Включает форму для ввода email, пароля и имени.

3. Dashboard.tsx
   - Компонент панели управления администратора. 
   Отображает статистику, активные сессии пользователей и гостей, включает функциональность 
   для обновления данных в реальном времени.

4. App.tsx
   - Главный компонент приложения. 
   Включает маршрутизацию и инициализацию гостевой аутентификации. 
   Обрабатывает обновление сессий и активности пользователя.

5. cartStore.ts
   - Состояние корзины покупок, управляемое с помощью библиотеки Zustand. 
   Включает функции для добавления, удаления и обновления товаров в корзине.

6. Profile.tsx
   - Компонент страницы профиля пользователя. 
   Отображает информацию о пользователе и историю заказов, позволяет редактировать профиль.

7. ProductList.tsx
   - Компонент для отображения списка продуктов. 
   Включает фильтры для поиска продуктов по различным параметрам.

8. Checkout.tsx
   - Компонент страницы оформления заказа. 
   Включает форму для ввода контактной информации, выбора способа доставки и оплаты.

9. Cart.tsx
   - Компонент страницы корзины покупок. 
   Отображает товары, добавленные в корзину, позволяет изменять их количество или удалять их.

10. storage.ts
    - Функции для загрузки файлов в хранилище Supabase и получения публичных URL-адресов для файлов.

11. api.ts
    - Функции для выполнения HTTP-запросов к API с использованием аутентификации Supabase.

12. useAdmin.ts
    - Хук для проверки, является ли текущий пользователь администратором.

13. badge.tsx
    - Компонент для отображения небольших информационных блоков, таких как скидки, флаги, статусы и т.д.

14. Pagination.tsx
    - Компонент для отображения пагинации на страницах с продуктами.

15. Filters.tsx
    - Компонент для отображения фильтров на страницах с продуктами.

16. ProductCard.tsx
    - Компонент для отображения карточки продукта с информацией о продукте, изображением, ценой и кнопками для добавления в корзину и лайков.

17. Header.tsx
    - Компонент для отображения заголовка страницы с навигацией и иконками корзины, избранного и профиля пользователя.

18. ProductDetail.tsx
    - Компонент для отображения детальной информации о продукте, включая изображения, описание, цену и возможность добавления в корзину.

19. Home.tsx
    - Главная страница приложения. Отображает новинки, акционные предложения и хиты продаж.

20. Products.tsx
    - Компонент для управления продуктами в панели администратора. Включает функциональность для добавления, редактирования и удаления продуктов.

21. ProductCreatePage.tsx
    - Компонент для создания нового продукта в панели администратора. Включает форму для ввода данных о продукте и загрузки изображений.

22. AdminLogin.tsx
    - Компонент для входа в систему администратора. Включает функциональность для входа через Google и отображение текущего времени и погоды.

23. AdminLayout.tsx
    - Компонент для отображения макета панели администратора. Включает боковую панель навигации и обработку выхода из системы.

24. select.tsx
    - Компонент для создания выпадающего списка с возможностью выбора значения.

25. input.tsx
    - Компонент для создания текстового поля ввода.

26. button.tsx
    - Компонент для создания кнопки с различными стилями и размерами.

27. button.constants.ts
    - Константы для стилизации кнопок, используемые в компоненте Button.

28. EditProductModal.tsx
    - Компонент для редактирования информации о продукте в модальном окне.

29. ReviewForm.tsx
    - Компонент для отправки отзыва о продукте.

30. NavBar.tsx
    - Компонент для отображения навигационной панели с меню и иконками.

31. ImageUploader.tsx
    - Компонент для загрузки изображений с отображением прогресса загрузки.

32. HeroSection.tsx
    - Компонент для отображения главного баннера с фильтрами для поиска продуктов.

33. database.types.ts
    - Определяет интерфейсы для типов данных, используемых в базе данных, таких как Product, User, Order и другие.

34. utils.ts
    - Вспомогательные функции, такие как объединение классов CSS.

35. supabaseClient.ts
    - Инициализация клиента Supabase для взаимодействия с базой данных.

36. settings.ts
    - Функции для работы с настройками магазина, включая получение, установку и удаление настроек.

37. analytics.ts
    - Функции для отслеживания событий и логирования действий пользователя.




frontend/
├── public/                  # Статические ресурсы
│   ├── _redirects           # Правила перенаправлений (например, для SPA)
│   └── favicon.ico          # Фавиконка приложения
│
├── src/                     # Исходный код приложения
│   ├── components/          # Переиспользуемые компоненты
│   │   ├── ui/              # Базовые UI-компоненты
│   │   │   ├── badge.tsx    # Бейджи для статусов/тегов
│   │   │   ├── button.tsx   # Кастомные кнопки с вариантами
│   │   │   ├── button.constants.ts # Константы стилей кнопок
│   │   │   ├── input.tsx    # Поле ввода с валидацией
│   │   │   ├── select.tsx   # Выпадающий список
│   │   │   ├── tabs.tsx     # Компонент вкладок
│   │   │   ├── ImageUploader.tsx # Загрузчик изображений с превью
│   │   │   ├── Pagination.tsx    # Пагинация для списков
│   │   │   ├── Filters.tsx       # Фильтры для каталога товаров
│   │   │   └── EditProductModal.tsx # Модалка редактирования товара
│   │   │
│   │   ├── HeroSection.tsx  # Главный баннер с поиском
│   │   ├── Header.tsx       # Шапка сайта (лого, навигация)
│   │   ├── NavBar.tsx       # Навигационное меню
│   │   ├── ProductCard.tsx  # Карточка товара для списков
│   │   └── ReviewForm.tsx   # Форма для оставления отзывов
│   │
│   ├── hooks/               # Кастомные хуки
│   │   └── useAdmin.ts      # Проверка прав администратора
│   │
│   ├── lib/                 # Вспомогательные модули
│   │   ├── analytics.ts     # Интеграция с аналитикой
│   │   ├── supabaseClient.ts # Клиент Supabase
│   │   ├── settings.ts      # Настройки приложения
│   │   ├── utils.ts         # Вспомогательные функции
│   │   ├── api.ts           # API-клиент для запросов
│   │   └── storage.ts       # Работа с облачным хранилищем
│   │
│   ├── middleware/          # Прослойки для маршрутизации
│   │   └── AdminRoute.tsx   # Защита админских маршрутов
│   │
│   ├── pages/               # Страницы приложения
│   │   ├── admin/           # Админ-панель
│   │   │   ├── AdminLayout.tsx  # Общий лейаут админки
│   │   │   ├── AdminLogin.tsx   # Авторизация администратора
│   │   │   ├── Dashboard.tsx    # Статистика и аналитика
│   │   │   ├── Products.tsx     # Управление товарами
│   │   │   └── ProductCreatePage.tsx # Создание нового товара
│   │   │
│   │   ├── auth/            # Авторизация
│   │   │   ├── AuthCallback.tsx # Колбэк OAuth-провайдеров
│   │   │   ├── Auth.tsx     # Общая страница аутентификации
│   │   │   └── Login.tsx    # Страница входа для пользователей
│   │   │
│   │   ├── Home.tsx         # Главная страница
│   │   ├── Cart.tsx         # Корзина с товарами
│   │   ├── Checkout.tsx     # Оформление заказа
│   │   ├── ProductList.tsx  # Каталог товаров
│   │   ├── ProductDetail.tsx # Детали товара
│   │   └── Profile.tsx      # Личный кабинет пользователя
│   │
│   ├── stores/              # Состояние приложения (Zustand)
│   │   └── cartStore.ts     # Хранилище корзины покупок
│   │
│   ├── types/               # Типы TypeScript
│   │   └── database.types.ts # Типы данных для Supabase
│   │
│   ├── App.tsx              # Корневой компонент приложения
│   ├── main.tsx             # Точка входа
│   ├── index.css            # Глобальные стили
│   └── vite-env.d.ts        # Объявления типов Vite
│
├── supabase/                # Конфигурация Supabase
│   └── migrations/          # SQL-миграции базы данных
│
├── .env                     # Переменные окружения
├── package.json             # Зависимости и скрипты
├── tailwind.config.js       # Конфиг Tailwind CSS
└── vite.config.ts           # Конфигурация сборщика Vite